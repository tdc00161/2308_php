<?php

// for($i= 0; $i <= 2; $i++) {
//     echo $i, "\n";
// }

// // break : for문을 종료하고 빠져나오는 문법;
// // for($i = 0; $i <= 2; $i++){
// //     echo "안녕하세요. \n";
// //     break;
// // }

// // continue : continue 아래에 있는 처리를 실행하지 않고 다음 루프로 진행
// for($i = 0; $i <= 2; $i++){
//     if($i ===1){
//         continue;
//     }
//     echo "안녕하세요.{$i}\n";
// }

// // 이중 루프
// for($i = 0; $i <= 1; $i++) {
//     for($z = 9; $z >= 8; $z--) {
//         echo "{$i},,,,,{$z}\n";
//     }
// }

// 상위 I
// 하위 z 하위 z 하위 z

// for($i = 0; $i <=2; $i++){
//     echo "안녕하세요\n";
//     if($i >=2){
//      break;
//     }
// }

// for($i = 0; $i <= 1; $i++) {
//     for($z = 9; $z >=8; $z--) {
//         echo "{$i},,,,,{$z}\n";
//     }
// }

// 0,,,,,9
// 1,,,,,8

// $a = 7;

// for($i = 4; $i <= $a; $i++){
//     echo "배고파\n";
//     if($i === 5){
//         continue;
//     }
// }

// $arr = [1, 2, 3];
// // echo count($arr) - 1;

// for($i = 0; $i <= count($arr)-1; $i++){
//     echo $arr[$i]."\n";
// }

// $arr2 = [
//         "현희" => "불고기"
//         ,"호철" => "김치"
//         ,"휘야" => "못정함"
// ];

// foreach($arr2 as $key => $val){
//     echo "{$key} : {$val}\n";
// }

// 키가 필요 없을 때
// foreach($arr2 as $val){
//     echo "{$val}";
// }






// ----------------------------------------------------

// 1.반복문을 이용하여 숫자를 1~10까지 출력해주세요.

// $i = 1;

// while($i<=10){
//     echo $i."\n";
//     $i++;
// }

// 2. 구구단 8단을 출력해 주세요.

// $i = 1;

// while ($i <= 9){
//     echo "8 x {$i} = ", 8*$i, "\n";
//     $i++;
// }

// 3. 19단을 출력해 주세요.

// $i = 1;

// while ($i <= 9){
//     echo "19 x {$i} = ", 19*$i, "\n";
//     $i++;
// }

// 4. 두 숫자를 더해주는 함수를 만들어 주세요.

// $a = 3;
// $b = 5;

// function inter($a, $b) {
//     echo "{$a} + {$b}";
// }

// if (7>4) {
//     echo inter($a, $b);
// }

//5. 짜장면이면 중식, 비빔밥이면 한식, 그외는 양식으로 출력해 주세요.

// $food = "";

// if ($food === "짜장면"){
//     echo "중식";
// } else if($food === "비빔밥"){
//     echo "한식";
// } else { 
//     echo "양식";
// }

$text = "";

for($i = 1; $i <=5; $i++){
    magic_quotes_runtime
}